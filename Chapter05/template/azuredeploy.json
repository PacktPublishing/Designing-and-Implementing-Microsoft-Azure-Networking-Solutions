{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "OnPremVmName": {
      "type": "string",
      "defaultValue": "onpremvm",
      "metadata": {
        "description": "The name of the on-premises virtual machine."
      }
    },
    "DataVmName": {
      "type": "string",
      "defaultValue": "datavm",
      "metadata": {
        "description": "The name of the data virtual machine."
      }
    },
    "RemotePcName": {
      "type": "string",
      "defaultValue": "remotepc",
      "metadata": {
        "description": "The name of the remote user PC"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Username for the data virtual machine."
      }
    },
    "onpremUsername": {
      "type": "string",
      "defaultValue": "onpremuser",
      "metadata": {
        "description": "Username for the onprem virtual machine."
      }
    },
    "remoteUsername": {
      "type": "string",
      "defaultValue": "remoteuser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "VmPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "IpsecSharedKey": {
      "type": "secureString",
      "defaultValue": "vpnPass123",
      "metadata": {
        "description": "SharedKey for the IPSEC connection"
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "RemotePcOSVersion": {
      "type": "string",
      "defaultValue": "2019-Datacenter",
      "allowedValues": [
        "2012-Datacenter",
        "2016-Datacenter",
        "2019-Datacenter",
        "2022-datacenter"
      ],
      "metadata": {
        "description": "The Windows version for the Remote PC"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "firstVnetLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy the CoreServices VNet into"
      }
    },
    "secondVnetLocation": {
      "type": "string",
      "defaultValue": "West US",
      "allowedValues": [
        "East US",
        "East US 2",
        "South Central US",
        "Central US",
        "West US",
        "Australia East",
        "Southeast Asia",
        "North Europe",
        "West Europe",
        "UK South",
        "UK West",
        "South Central US",
        "South Africa North",
        "Central India",
        "East Asia",
        "Japan East",
        "Korea South",
        "South India",
        "West India",
        "France South",
        "Germany North",
        "Central India",
        "Norway West",
        "UAE Central"
      ],
      "metadata": {
        "description": "Location to deploy the other VNets into"
      }
    }
  },
  "variables": {
    "Vnet-1-Name": "CoreServicesVnet",
    "Vnet-2-Name": "onprem-network",
    "Vnet-3-Name": "remotepc-network",
    "GatewaySubnetName": "GatewaySubnet",
    "WebSubnetName": "PublicWebServiceSubnet",
    "DataSubnetName": "DatabaseSubnet",
    "OnPremSubnet1Name": "onprem-subnet-1",
    "OnPremSubnet2Name": "onprem-subnet-2",
    "OnPremSubnet3Name": "onprem-subnet-3",
    "OnPremGatewayName": "onpremgw",
    "AzureGatewayName": "azuregw",
    "RemotePcSubnetName": "remotepc-subnet",
    "Vnet-1-AddressPrefix": "10.10.0.0/16",
    "WebSubnetAddressPrefix": "10.10.3.0/24",
    "dataSubnetAddressPrefix": "10.10.2.0/24",
    "AzureGatewaySubnetAddressPrefix": "10.10.10.0/24",
    "Vnet-2-AddressPrefix": "10.50.0.0/16",
    "OnPremSubnet1AddressPrefix": "10.50.1.0/24",
    "OnPremSubnet2AddressPrefix": "10.50.2.0/24",
    "OnPremSubnet3AddressPrefix": "10.50.3.0/24",
    "OnPremGatewaySubnetAddressPrefix": "10.50.10.0/24",
    "Vnet-3-AddressPrefix": "10.70.0.0/16",
    "RemotePcSubnetAddressPrefix": "10.70.1.0/24",
    "RemotePcPip": "[format('{0}PublicIP', parameters('RemotePcName'))]",
    "AzureGatewayPip": "[format('{0}PublicIP', variables('AzureGatewayName'))]",
    "OnPremGatewayPip": "[format('{0}PublicIP', variables('OnPremGatewayName'))]",
    "RemotePCdnsLabelPrefix": "[toLower(format('{0}-{1}', parameters('RemotePcName'), uniqueString(resourceGroup().id)))]",
    "AzureGatewaydnsLabelPrefix": "[toLower(format('{0}-{1}', variables('AzureGatewayName'), uniqueString(resourceGroup().id)))]",
    "OnPremGatewaydnsLabelPrefix": "[toLower(format('{0}-{1}', variables('OnPremGatewayName'), uniqueString(resourceGroup().id)))]",
    "AzureGatewayPipId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('AzureGatewayPip'))]",
    "OnPremGatewayPipId": "[resourceId('Microsoft.Network/publicIPAddresses',variables('OnPremGatewayPip'))]",
    "AzureLocalNetworkGateway": "Azure-Gateway-LNG",
    "OnPremVmNic": "[format('{0}NetInt', parameters('OnPremVmName'))]",
    "DataVmNic": "[format('{0}NetInt', parameters('dataVmName'))]",
    "RemotePcNic": "[format('{0}NetInt', parameters('RemotePcName'))]",
    "RemotePcNSG": "RemotePcNsg",
    "OnPremGatewaySubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet-2-Name'), 'GatewaySubnet')]",
    "osDiskType": "Standard_LRS",
    "_artifactsLocation": "[deployment().properties.templateLink.uri]",
    "_artifactsLocationSasToken": "",
    "scriptUrl": "[uri(variables('_artifactsLocation'),concat('installscript.ps1',variables('_artifactsLocationSasToken')))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('RemotePcNic')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet-3-Name'), variables('RemotePcSubnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('RemotePcPip'))]"
              }
            }
          }
        ],
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('RemotePcNSG'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('RemotePcNSG'))]",
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('RemotePcPip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet-3-Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('DataVmNic')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet-1-Name'), variables('dataSubnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet-1-Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('OnPremVmNic')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet-2-Name'), variables('OnPremSubnet1Name'))]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet-2-Name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2021-05-01",
      "name": "[variables('RemotePcNSG')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "securityRules": [
          {
            "name": "RDP",
            "properties": {
              "priority": 1000,
              "protocol": "Tcp",
              "access": "Allow",
              "direction": "Inbound",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "3389"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[variables('Vnet-1-Name')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet-1-AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('dataSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('DataSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('WebSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('WebSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[variables('Vnet-2-Name')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet-2-AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('OnPremSubnet1Name')]",
            "properties": {
              "addressPrefix": "[variables('OnPremSubnet1AddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('OnPremSubnet2Name')]",
            "properties": {
              "addressPrefix": "[variables('OnPremSubnet2AddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('OnPremSubnet3Name')]",
            "properties": {
              "addressPrefix": "[variables('OnPremSubnet3AddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('GatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[variables('OnPremGatewaySubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[variables('Vnet-3-Name')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet-3-AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('RemotePcSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('RemotePcSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('AzureGatewayPip')]",
      "location": "[parameters('firstVnetLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('AzureGatewaydnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('OnPremGatewayPip')]",
      "location": "[parameters('secondVnetLocation')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('OnPremGatewaydnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('RemotePcPip')]",
      "location": "[parameters('secondVnetLocation')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[variables('RemotePcdnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('OnPremVmName')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('OnPremVmNic'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('OnPremVmName')]",
          "adminUsername": "[parameters('onpremUsername')]",
          "adminPassword": "[parameters('VmPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('OnPremVmNic'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('DataVmName')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('DataVmNic'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('DataVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('VmPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('DataVmNic'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('RemotePcName')]",
      "location": "[parameters('secondVnetLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "[parameters('RemotePcOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('RemotePcNic'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('RemotePcName')]",
          "adminUsername": "[parameters('remoteUsername')]",
          "adminPassword": "[parameters('VmPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('RemotePcNic'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "MyCustomScriptExtension",
      "apiVersion": "2015-05-01-preview",
      "location": "[parameters('secondVnetLocation')]",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/',parameters('RemotePcName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "CustomScriptExtension",
        "typeHandlerVersion": "1.4",
        "settings": {
          "fileUris": [
            "[uri(variables('_artifactsLocation'), concat('vpncert.ps1', variables('_artifactsLocationSasToken')))]"
          ],
          "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File vpncert.ps1"
        }
      }
    },
    {
      "apiVersion": "2020-11-01",
      "type": "Microsoft.Network/virtualNetworkGateways",
      "name": "[variables('OnPremGatewayName')]",
      "location": "[parameters('secondVnetLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('OnPremGatewayPip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet-2-Name'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('OnPremGatewaySubnetRef')]"
              },
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('OnPremGatewayPip'))]"
              }
            },
            "name": "OnPremGatewayConfig"
          }
        ],
        "sku": {
          "name": "VpnGw1",
          "tier": "VpnGw1"
        },
        "gatewayType": "Vpn",
        "vpnType": "RouteBased",
        "enableBgp": true,
        "activeActive": false,
        "vpnGatewayGeneration": "Generation1",
        "bgpSettings": {
          "asn": 65001
        }
      }
    },
    {
      "comments": "local network gateway in Gateway1 to connect to the remote gateway1-public IP1",
      "type": "Microsoft.Network/localNetworkGateways",
      "apiVersion": "2020-08-01",
      "name": "[variables('AzureLocalNetworkGateway')]",
      "location": "[parameters('secondVnetLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('OnPremGatewayName'))]"
      ],
      "properties": {
        "fqdn": "[reference(variables('AzureGatewayPipId'),'2020-06-01').dnsSettings.fqdn]",
        "bgpSettings": {
          "asn": 65002,
          "bgpPeeringAddress": "10.10.10.254",
          "peerWeight": 0
        }
      }
    },
    {
      "comments": "VPN connection between the on-prem gateway and the Azure gateway",
      "type": "Microsoft.Network/connections",
      "apiVersion": "2020-08-01",
      "name": "onprem-to-azure-vpn-connection",
      "location": "[parameters('secondVnetLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworkGateways', variables('OnPremGatewayName'))]",
        "[resourceId('Microsoft.Network/localNetworkGateways', variables('AzureLocalNetworkGateway'))]"
      ],
      "properties": {
        "virtualNetworkGateway1": {
          "id": "[resourceId('Microsoft.Network/virtualNetworkGateways',variables('OnPremGatewayName'))]"
        },
        "localNetworkGateway2": {
          "id": "[resourceId('Microsoft.Network/localNetworkGateways', variables('AzureLocalNetworkGateway'))]"
        },
        "connectionType": "IPsec",
        "routingWeight": 0,
        "sharedKey": "[parameters('IpsecSharedKey')]",
        "enableBGP": true
      }
    }

  ],
  "outputs": {
    "remoteUsername": {
      "type": "string",
      "value": "[parameters('remoteUsername')]"
    },
    "RemotePC-FQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('RemotePcPip'))).dnsSettings.fqdn]"
    },
    "OnPremVPNDevice-FQDN": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('OnPremGatewayPip'))).dnsSettings.fqdn]"
    },
    "OnPremVPNDevice-BGP-ASN": {
      "type": "string",
      "value": "65001"
    },
    "OnPremVPNDevice-BGP-PeerIP": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/virtualNetworkGateways', variables('OnPremGatewayName'))).bgpSettings.bgpPeeringAddress]"
    }
  }
}