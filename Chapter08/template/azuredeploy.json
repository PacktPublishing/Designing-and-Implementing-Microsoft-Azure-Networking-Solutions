{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "WebVmName": {
      "type": "string",
      "defaultValue": "webvm",
      "metadata": {
        "description": "The name of the web virtual machine."
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "Username for the Virtual Machine."
      }
    },
    "adminPassword": {
      "type": "secureString",
      "metadata": {
        "description": "Password for the Virtual Machine"
      }
    },
    "webVmdnsLabelPrefix": {
      "type": "string",
      "defaultValue": "[toLower(format('{0}-{1}', parameters('WebVmName'), uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[toLower(concat('logstore', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
      }
    },
    "ubuntuOSVersion": {
      "type": "string",
      "defaultValue": "18.04-LTS",
      "allowedValues": [
        "12.04.5-LTS",
        "14.04.5-LTS",
        "16.04.0-LTS",
        "18.04-LTS"
      ],
      "metadata": {
        "description": "The Ubuntu version for the VM. This will pick a fully patched image of this given Ubuntu version."
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_B2s",
      "metadata": {
        "description": "The size of the VM"
      }
    },
    "firstVnetLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location to deploy the CoreServices VNet into"
      }
    }
  },
  "variables": {
    "Vnet-1-Name": "CoreServicesVnet",
    "SharedSvcSubnetName": "SharedServicesSubnet",
    "WebSubnetName": "PublicWebServiceSubnet",
    "DataSubnetName": "DatabaseSubnet",
    "Vnet-1-AddressPrefix": "10.10.0.0/16",
    "SharedSvcSubnetAddressPrefix": "10.10.1.0/24",
    "dataSubnetAddressPrefix": "10.10.2.0/24",
    "webSubnetAddressPrefix": "10.10.3.0/24",
    "WebVmPip": "[format('{0}PublicIP', parameters('WebVmName'))]",
    "WebVmNic": "[format('{0}NetInt', parameters('WebVmName'))]",
    "osDiskType": "Standard_LRS",
    "storageAccountName": "[toLower(concat('logstore', uniqueString(resourceGroup().id)))]",
    "containerName": "ddoslogs"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2021-05-01",
      "name": "[variables('Vnet-1-Name')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('Vnet-1-AddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('SharedSvcSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('SharedSvcSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('dataSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('DataSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          },
          {
            "name": "[variables('WebSubnetName')]",
            "properties": {
              "addressPrefix": "[variables('WebSubnetAddressPrefix')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2021-05-01",
      "name": "[variables('WebVmPip')]",
      "location": "[parameters('firstVnetLocation')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[parameters('webVmdnsLabelPrefix')]"
        },
        "idleTimeoutInMinutes": 4
      }
    },
    {
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2021-05-01",
      "name": "[variables('WebVmNic')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('Vnet-1-Name'), variables('webSubnetName'))]"
              },
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('WebVmPip'))]"
              }
            }
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/publicIPAddresses', variables('WebVmPip'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', variables('Vnet-1-Name'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2021-11-01",
      "name": "[parameters('WebVmName')]",
      "location": "[parameters('firstVnetLocation')]",
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "storageProfile": {
          "osDisk": {
            "createOption": "FromImage",
            "managedDisk": {
              "storageAccountType": "[variables('osDiskType')]"
            }
          },
          "imageReference": {
            "publisher": "Canonical",
            "offer": "UbuntuServer",
            "sku": "[parameters('ubuntuOSVersion')]",
            "version": "latest"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('WebVmNic'))]"
            }
          ]
        },
        "osProfile": {
          "computerName": "[parameters('WebVmName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkInterfaces', variables('WebVmNic'))]"
      ]
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('WebVmName'),'/nginxconfig')]",
      "apiVersion": "2020-06-01",
      "location": "[parameters('firstVnetLocation')]",
      "dependsOn": [
        "[resourceId('Microsoft.Compute/virtualMachines/', parameters('WebVmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "fileUris": [
            "[uri(deployment().properties.templateLink.uri, concat('install_nginx.sh'))]"
          ],
          "commandToExecute": "sh install_nginx.sh"
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('firstVnetLocation')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/default/{1}', parameters('storageAccountName'), variables('containerName'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "adminUsername": {
      "type": "string",
      "value": "[parameters('adminUsername')]"
    },
    "PublicWebVM": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('WebVmPip'))).ipAddress]"
    },
    "SubscriptionId": {
      "type": "string",
      "value": "[subscription().subscriptionId]"
    }
  }
}